@model IEnumerable<persontracker.Models.Expense>
@{
    ViewData["Title"] = "Expenses";
}

<h1>@ViewData["My Expenses"]</h1>

<div class="container">
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>Description</th>
                <th>Amount</th>
                <th>Catagory</th>
                <th>Date</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Description</td>
                    <td>@item.Amount</td>
                    <td>@item.Catagory</td>
                    <td>@item.Date.ToString("yyyy-mm-dd")</td>

                </tr>
            }
        </tbody>
    </table>
</div>

<h2>Overview</h2>
<div>
    <canvas style="max-width: 450ps; max-height: 450px;" id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');

    fetch('Expenses/GetChart')
        .then(response => response.json())
        .then(data => {
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: data.map(d => d.catagory),
                    datasets: [{
                        data: data.map(d => d.total),
                        backgroundColor: [
                            'red',
                            'blue',
                            'green',
                            'yellow',
                            'purple',
                            'orange',
                            'pink',
                            'brown',
                            'grey',
                            'black'
                        ]
                    }]
                },
            });


</script>